Sure, here's a simple Java program that includes encryption and decryption mechanisms using the AES algorithm in CBC mode.

```java
import javax.crypto.Cipher;
import javax.crypto.SecretKey;
import javax.crypto.spec.IvParameterSpec;
import javax.crypto.spec.SecretKeySpec;
import java.util.Base64;
import java.nio.charset.StandardCharsets;

public class Main {
    
    private static final String initVector = "encryptionIntVec"; // 16 bytes IV

    public static String encrypt(String key, String value) {
        try {
            IvParameterSpec iv = new IvParameterSpec(initVector.getBytes("UTF-8"));
            SecretKeySpec skeySpec = new SecretKeySpec(key.getBytes("UTF-8"), "AES");

            Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5PADDING");
            cipher.init(Cipher.ENCRYPT_MODE, skeySpec, iv);

            byte[] encrypted = cipher.doFinal(value.getBytes());
            return Base64.getEncoder().encodeToString(encrypted);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        return null;
    }

    public static String decrypt(String key, String encrypted) {
        try {
            IvParameterSpec iv = new IvParameterSpec(initVector.getBytes("UTF-8"));
            SecretKeySpec skeySpec = new SecretKeySpec(key.getBytes("UTF-8"), "AES");

            Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5PADDING");
            cipher.init(Cipher.DECRYPT_MODE, skeySpec, iv);

            byte[] original = cipher.doFinal(Base64.getDecoder().decode(encrypted));

            return new String(original);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        return null;
    }

    public static void main(String[] args) {
        String key = "secretEncryptionKey"; // 128 bit key
        String originalString = "Hello World";

        System.out.println("Original String: " + originalString);

        String encryptedString = encrypt(key, originalString);
        System.out.println("Encrypted String: " + encryptedString);

        String decryptedString = decrypt(key, encryptedString);
        System.out.println("Decrypted String: " + decryptedString);
    }
}
```

This program encrypts and then decrypts a string message ("Hello World") using the AES algorithm in CBC mode. Make sure to replace the `initVector` and `key` with your own values; as of now, there are just placeholders. Also, the key should be 16 characters (128 bits) to suit the AES block size. 

Please note that this is just a simple example and might not be suitable for a production environment, since it does not cover aspects such as key management, secure storage or suitable methods of encoding.
