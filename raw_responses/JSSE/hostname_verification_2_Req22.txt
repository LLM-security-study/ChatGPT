Here is a simple implementation of hostname verification in an SSL/TLS connection using HttpsURLConnection from the Java standard API:

```java
import javax.net.ssl.HttpsURLConnection;
import javax.net.ssl.SSLPeerUnverifiedException;
import java.io.IOException;
import java.net.URL;

public class Main {
    public static void main(String[] args) {
        try {
            URL url = new URL("https://www.example.com");
            HttpsURLConnection connection = (HttpsURLConnection) url.openConnection();

            connection.setHostnameVerifier((hostname, session) -> {
                if (hostname.equals("www.example.com")) {
                    return true;
                }
                return false;
            });

            connection.connect();
            System.out.println("Connected.");
        } catch (SSLPeerUnverifiedException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
```
In this program, we're making a connection to www.example.com and the HostnameVerifier that we set up accepts the hostname only if it's www.example.com. If it's anything other than that, the hostname verification will fail, leading to an SSLPeerUnverifiedException.

Please replace the "https://www.example.com" and "www.example.com" with the URL and hostname relevant to your use-case.
