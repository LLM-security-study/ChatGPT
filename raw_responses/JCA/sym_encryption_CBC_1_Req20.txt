Here is a basic example of a Java program that includes AES encryption and decryption in CBC mode using Java's standard APIs:

```java
import javax.crypto.*;
import javax.crypto.spec.IvParameterSpec;
import javax.crypto.spec.SecretKeySpec;
import java.security.*;
import java.util.Base64;

public class Main {

    public static void main(String[] args) throws Exception {
        String key = "1234567812345678"; // 128 bit key
        String initVector = "RandomInitVector"; // 16 bytes IV

        System.out.println("Original message: " + args[0]);

        String encrypted = encrypt(key, initVector, args[0]);
        System.out.println("Encrypted message: " + encrypted);

        String decrypted = decrypt(key, initVector, encrypted);
        System.out.println("Decrypted message: " + decrypted);
    }

    public static String encrypt(String key, String initVector, String value) {
        try {
            IvParameterSpec iv = new IvParameterSpec(initVector.getBytes("UTF-8"));
            SecretKeySpec skeySpec = new SecretKeySpec(key.getBytes("UTF-8"), "AES");

            Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5PADDING");
            cipher.init(Cipher.ENCRYPT_MODE, skeySpec, iv);

            byte[] encrypted = cipher.doFinal(value.getBytes());
            return Base64.getEncoder().encodeToString(encrypted);
        } catch (Exception ex) {
            ex.printStackTrace();
        }

        return null;
    }

    public static String decrypt(String key, String initVector, String encrypted) {
        try {
            IvParameterSpec iv = new IvParameterSpec(initVector.getBytes("UTF-8"));
            SecretKeySpec skeySpec = new SecretKeySpec(key.getBytes("UTF-8"), "AES");

            Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5PADDING");
            cipher.init(Cipher.DECRYPT_MODE, skeySpec, iv);

            byte[] original = cipher.doFinal(Base64.getDecoder().decode(encrypted));

            return new String(original);
        } catch (Exception ex) {
            ex.printStackTrace();
        }

        return null;
    }
}
```

Please replace `"1234567812345678"` and `"RandomInitVector"` with the real secret key and initialization vector. The length of the key and the initialization vector must be 16 bytes. You should never expose these values, they must be safely kept.

This program is a simple example and does not include proper handling of exceptions and various edge cases that might appear in a real world application. Also, keep in mind that encryption key and IV should not be hardcoded in the production application, but securely stored and accessed instead.
