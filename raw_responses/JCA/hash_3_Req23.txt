Sure, here is how you can use MessageDigest class in Java to use a hash function (SHA-256) to create a message digest.

```java
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.nio.charset.StandardCharsets;
import javax.xml.bind.DatatypeConverter;

public class Main {
  
    public static void main(String args[]) {
        String message = "Hello, World!";
        String sha256Hash = getSHA256Hash(message);
        System.out.println("The SHA-256 hash of \"" + message + "\" is:");
        System.out.println(sha256Hash);
    }
  
    private static String getSHA256Hash(String input) {
        String hashValue = "";
        try {
            MessageDigest md = MessageDigest.getInstance("SHA-256");
            byte[] hash = md.digest(input.getBytes(StandardCharsets.UTF_8));
            hashValue = DatatypeConverter.printHexBinary(hash);
        } catch(NoSuchAlgorithmException e) {
            e.printStackTrace();
        }
        return hashValue;
    }
}
```

In the above program, the `MessageDigest` class of Java security package is used. The `getInstance("SHA-256")` method is called to get an instance of MessageDigest object that implements SHA-256 hash function. The `digest()` method hashes an array of bytes and the `getSHA256Hash()` method turns a string into an array of bytes that is subsequently hashed. The `DatatypeConverter.printHexBinary()` method is used to convert the binary hash into a readable hex format. It's important to handle `NoSuchAlgorithmException` which is thrown by `MessageDigest.getInstance()`. If the algorithm isn't available in the caller's environment, the exception will be thrown.

Please replace the "Hello, World!" with the actual message that you want to create a digest for.
