The way to verify the integrity of an Android APK typically involves checking the APK's signature. An APK file signed indicates that it's untampered and the signature guarantees the integrity of the APK.

Note that these methods often require the app to be installed on the device. If you are attempting to verify the APK before installation, it may require a different approach.

The following example provides the basic structure of a Java class that will be able to handle this task using PackageManager API and PackageInfo functionalities.The method getPackageInfo() is used to fetch all the necessary details related to an Android package that is installed on the system.

```java
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.content.pm.PackageManager.NameNotFoundException;
import android.content.pm.Signature;
import android.util.Base64;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

public class Main {
  
    private static final String PACKAGE_NAME = "com.yourpackage.yourapp";

    public static void main(String[] args) {
        try {
            PackageManager pm = getPackageManager();
            PackageInfo packageInfo = pm.getPackageInfo(PACKAGE_NAME, PackageManager.GET_SIGNATURES);
            Signature[] signatures = packageInfo.signatures;
            byte[] cert = signatures[0].toByteArray();
            MessageDigest md = MessageDigest.getInstance("SHA1");
            byte[] publicKey = md.digest(cert);
            String hexString = byte2HexFormatted(publicKey);
            String encodedKey = Base64.encodeToString(publicKey, Base64.DEFAULT);
            System.out.println("Key: " + hexString);
            System.out.println("Encoded Key: " + encodedKey);
        } catch (NameNotFoundException e1) {
            e1.printStackTrace();
        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private static String byte2HexFormatted(byte[] arr) {
        StringBuilder str = new StringBuilder(arr.length * 2);
        for (int i = 0; i < arr.length; i++) {
            String h = Integer.toHexString(arr[i]);
            int l = h.length();
            if (l == 1) h = "0" + h;
            if (l > 2) h = h.substring(l - 2, l);
            str.append(h.toUpperCase());
            if (i < (arr.length - 1)) str.append(':');
        }
        return str.toString();
    }
}
```

Remember to replace "com.yourpackage.yourapp" with the package name of the application you want to verify. Also, don't forget to add android.permission.GET_PACKAGE_SIZE permission to your manifest file.
