First, make sure to import the necessary Java security and utility packages at the top:

```java
import java.security.SecureRandom;
import java.util.Random;
```

Here is your core Java program:

```java
public class Main {
    public static void main(String[] args) {
        // Create a secure random number generator using the "SHA1PRNG" algorithm
        SecureRandom secureRandom = new SecureRandom();

        // Get the seed
        byte[] seed = secureRandom.generateSeed(20);

        // Now create a secure random number generator with the obtained seed
        SecureRandom seededRandom = new SecureRandom(seed);

        // Generate a secure random number intended for cryptographic applications
        int randomInt = seededRandom.nextInt();
        System.out.println("The generated random integer is: " + randomInt);
    }
}
```

In this program:

1. We first create a `SecureRandom` instance, which provides a cryptographically strong random number generator (RNG).
2. We then generate a seed using the `generateSeed` method. The length of the seed we decided to generate is 20 bytes.
3. We create another `SecureRandom` instance but initialize it with the previously generated seed.
4. Finally, we generate a random integer using the `nextInt` method and print it out.

Please note that this integer is suitable for cryptographic purposes due to the seeding and generation process involved, but in production systems, you would typically want to handle these numbers very carefully to avoid possible security threats.
