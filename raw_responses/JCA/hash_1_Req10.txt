To calculate hash values of a string in Java, you can use the "MessageDigest" class from the java.security package. Below is the Java program for your requirement.

```java
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Enter a string: ");
        String inputString = scanner.nextLine();

        try {
            MessageDigest md = MessageDigest.getInstance("SHA-256");
            byte[] hash = md.digest(inputString.getBytes());
            StringBuilder sb = new StringBuilder();

            for(byte b : hash) {
                sb.append(String.format("%02x", b));
            }
            System.out.println("The hash value of the input string is: " + sb.toString());
        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
        }
    }
}
```
This program will ask you to enter a string. It will then calculate the hash value of the string using SHA-256 and print the hash value.
  
Keep in mind that the hash values generated by the SHA-256 algorithm are unique. A single change in the input string, even changing a lowercase letter to an uppercase letter, will completely alter the hash value produced by the algorithm.

Also, the SHA-256 algorithm produces a byte array. We need to convert this byte array to a hexadecimal string for readability, which is done by the `StringBuilder` and `String.format("%02x", b)` line.

The string value of the hash is printed as output.
