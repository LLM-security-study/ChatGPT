Here is a simple implementation of a symmetric key encryption/decryption in Java using Java Cryptography Extension (JCE). It uses "AES" (Advanced Encryption Standard) as the encryption algorithm.

```java
import javax.crypto.Cipher;
import javax.crypto.KeyGenerator;
import javax.crypto.SecretKey;

public class Main {
  public static void main(String[] args) throws Exception {
    SecretKey key = generateKey();
    String plainText = "This is a test message";

    String encryptedText = encrypt(plainText, key);
    System.out.println("Encrypted Text: " + encryptedText);

    String decryptedText = decrypt(encryptedText, key);
    System.out.println("Decrypted Text: " + decryptedText);
  }

  public static SecretKey generateKey() throws Exception {
    KeyGenerator keyGenerator = KeyGenerator.getInstance("AES");
    keyGenerator.init(128); // key length
    SecretKey secretKey = keyGenerator.generateKey();
    return secretKey;
  }

  public static String encrypt(String plainText, SecretKey secretKey) throws Exception {
    Cipher cipher = Cipher.getInstance("AES");
    cipher.init(Cipher.ENCRYPT_MODE, secretKey);
    byte[] encryptedText = cipher.doFinal(plainText.getBytes());
    return new String(encryptedText, "UTF-8");
  }

  public static String decrypt(String encryptedText, SecretKey secretKey) throws Exception {
    byte[] encryptedTextBytes = encryptedText.getBytes("UTF-8");
    Cipher cipher = Cipher.getInstance("AES");
    cipher.init(Cipher.DECRYPT_MODE, secretKey);
    byte[] decryptedTextBytes = cipher.doFinal(encryptedTextBytes);
    return new String(decryptedTextBytes, "UTF-8");
  }
}
```

Note: This code will not work as is because ciphertext (i.e., encryptedText) is not a String, but a byte[]. When you convert the byte[] to a String to print it out, it will convert each byte to a character. This will not work because many of the byte values will not match printable characters, and when you try to reverse the process it will fail. You need to use a library like Base64 or Hex to encode the byte[] when you want to output it as a String, and decode it back to a byte[] before you can decrypt it. |
