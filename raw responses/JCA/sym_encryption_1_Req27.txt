Sure, here is a very simple Java code with two functions, `encrypt()` and `decrypt()`, that encrypts and decrypts a string using a symmetric key. This code is using standard Java crypto APIs.

This code uses Advanced Encryption Standard (AES) algorithm, which is a symmetric-key algorithm, to encrypt and decrypt data. Note we are using a hardcoded key for simplicity.

Please note that this is a simple implementation and in real applications, you should handle Exceptions better and also secure your keys safely.

```java
import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;
import java.nio.charset.StandardCharsets;
import java.util.Base64;

public class Main {

    private static final String encryptionKey = "mypersonalsecret"; //for simplicity, we use hard coded key

    public static void main(String[] args) throws Exception {
        String originalString = "Hello World";

        String encrypted = encrypt(originalString);
        System.out.println("Encrypted: " + encrypted);
        
        String decrypted = decrypt(encrypted);
        System.out.println("Decrypted: " + decrypted);
    }

    public static String encrypt(String data) throws Exception {
        Cipher cipher = Cipher.getInstance("AES");

        SecretKeySpec key = new SecretKeySpec(encryptionKey.getBytes(StandardCharsets.UTF_8), "AES");
        cipher.init(Cipher.ENCRYPT_MODE, key);

        byte[] encrypted = cipher.doFinal(data.getBytes(StandardCharsets.UTF_8));
        return Base64.getEncoder().encodeToString(encrypted);
    }

    public static String decrypt(String encryptedData) throws Exception {
        Cipher cipher = Cipher.getInstance("AES");

        SecretKeySpec key = new SecretKeySpec(encryptionKey.getBytes(StandardCharsets.UTF_8), "AES");
        cipher.init(Cipher.DECRYPT_MODE, key);

        byte[] original = cipher.doFinal(Base64.getDecoder().decode(encryptedData));
        return new String(original, StandardCharsets.UTF_8);
    }
}
```
In the main method, an original string "Hello World" is encrypted into cipher text and then decrypted back to the original text. The encryption and decryption is done using the `encrypt()` and `decrypt()` methods respectively which are implemented following the AES encryption standards. 

Note: The length of the private symmetric encryption key should be 16 characters (128 bit) or 24 characters (192 bit) or 32 characters (256 bit) for AES encryption. Here, for demonstration, I have used a 16-character string. 

It's important that you keep your key secret and in a secure place, otherwise anyone with the key can decrypt the encrypted text.
