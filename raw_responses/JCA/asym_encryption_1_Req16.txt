Sure, here's a simple example of a Java program that performs encryption and decryption using a public and private key pair. This is a simple encryption/decryption program using RSA algorithm from Java's cryptographic library.

```java
import java.security.*;
import javax.crypto.Cipher;

public class Main {

    private static final String ALGORITHM = "RSA";

    public static byte[] encrypt(String text, PublicKey key) {
        byte[] cipherText = null;
        try {
            Cipher cipher = Cipher.getInstance(ALGORITHM);
            cipher.init(Cipher.ENCRYPT_MODE, key);
            cipherText = cipher.doFinal(text.getBytes());
        } catch (Exception e) {
            e.printStackTrace();
        }
        return cipherText;
    }

    public static String decrypt(byte[] text, PrivateKey key) {
        byte[] decryptedText = null;
        try {
            Cipher cipher = Cipher.getInstance(ALGORITHM);
            cipher.init(Cipher.DECRYPT_MODE, key);
            decryptedText = cipher.doFinal(text);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return new String(decryptedText);
    }

    public static void main(String[] args) {

        try {

            KeyPairGenerator keyPairGenerator = KeyPairGenerator.getInstance(ALGORITHM);
            keyPairGenerator.initialize(1024);

            KeyPair keyPair = keyPairGenerator.generateKeyPair();
            String message = "Hello, world!";

            byte[] encrypted = encrypt(message, keyPair.getPublic());

            String decrypted = decrypt(encrypted, keyPair.getPrivate());

            System.out.println("Original Message: " + message +
                    "\nEncrypted Message: " + new String(encrypted, "UTF8") +
                    "\nDecrypted Message: " + decrypted);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
```

In this program, the `encrypt(String text, PublicKey key)` method accepts a string that needs to be encrypted and the public key (generated by our `main` method), and encrypts the string using the RSA algorithm, it then returns an encrypted byte array.

The `decrypt(byte[] text, PrivateKey key)` method does the inverse: it takes an encrypted byte array and the private key and returns the original message string.

Lastly, the `main()` method generates the key pair, encrypts a message, decrypts it, and prints the original, the encrypted, and decrypted messages.

Keep in mind that you should handle cryptographic keys carefully in production systems and they should not be hardcoded into your program like in this example. They must be stored securely and managed properly.
