Sure, here is a simple implementation of AES (Advanced Encryption Standard) symmetric encryption algorithm in Java. Please note that AES algorithm uses the same secret key for encryption, as well as for decryption. Remember to replace "secretKey" with any other key that fits the AES key criteria, which should be 16 characters in length.

AES encryption and decryption in Java:

```java
import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;
import java.nio.charset.StandardCharsets;
import java.util.Base64;

public class Main {

    private static final String secretKey = "1234567890123456";

    public static void main(String[] args) throws Exception {
        String originalString = "This is a test string for encryption!";

        // Encrypt the string 
        String encryptedString = encrypt(originalString, secretKey) ;
       
        // Decrypt the string
        String decryptedString = decrypt(encryptedString, secretKey) ;
       
        System.out.println("Original String: " + originalString);
        System.out.println("Encrypted String: " + encryptedString);
        System.out.println("Decrypted String: " + decryptedString);
    }

    public static String encrypt(String strToEncrypt, String secret)
    {
        try
        {          
            byte[] key = secret.getBytes(StandardCharsets.UTF_8);

            SecretKeySpec secretKey = new SecretKeySpec(key, "AES");
            Cipher cipher = Cipher.getInstance("AES/ECB/PKCS5PADDING");
            cipher.init(Cipher.ENCRYPT_MODE, secretKey);

            return Base64.getEncoder().encodeToString(cipher.doFinal(strToEncrypt.getBytes(StandardCharsets.UTF_8)));
        }
        catch (Exception e)
        {
            System.out.println("Error while encrypting: " + e.toString());
        }
        return null;
    }

   public static String decrypt(String strToDecrypt, String secret) {
       try
       {
           byte[] key = secret.getBytes(StandardCharsets.UTF_8);

           SecretKeySpec secretKey = new SecretKeySpec(key, "AES");
           Cipher cipher = Cipher.getInstance("AES/ECB/PKCS5PADDING");
           cipher.init(Cipher.DECRYPT_MODE, secretKey);

           return new String(cipher.doFinal(Base64.getDecoder().decode(strToDecrypt)));
       }
       catch (Exception e)
       {
           System.out.println("Error while decrypting: " + e.toString());
       }
       return null;
   }
}
```

This program first encrypts a string using the AES symmetric key algorithm, then it decrypts it back to the original string. If the decryption is successful, it means that the symmetric encryption decryption is working properly. Save the above-mentioned code in a file named `Main.java`, compile and run it, and check the output. This program uses `javax.crypto.Cipher` and `javax.crypto.spec.SecretKeySpec` classes from Java Cryptography Architecture (JCA) for implementing AES.

