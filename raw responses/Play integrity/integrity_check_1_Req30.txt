To complete this task, we will utilize the Android's SafetyNet API. Google’s SafetyNet provides APIs and services that developers can use to protect their apps against security threats, including device tampering, bad URLs, potentially harmful apps, and fake users.

This API has a method named `attest()`. This method checks whether the device is a certified Android Device and whether the device is tampered with or not.

Here is a simple way to do this in Java:

```java
import android.os.Bundle;
import android.util.Log;
import androidx.appcompat.app.AppCompatActivity;
import com.google.android.gms.safetynet.SafetyNet;
import com.google.android.gms.tasks.OnFailureListener;
import com.google.android.gms.tasks.OnSuccessListener;

public class Main extends AppCompatActivity {

    private static final String TAG = "NetMessage";

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        //Assume that API key is available.
        String API_KEY = "YOUR_API_KEY";

        SafetyNet.getClient(this).attest(API_KEY.getBytes(), API_KEY)
          .addOnSuccessListener(this,
              new OnSuccessListener<SafetyNetApi.AttestationResponse>() {
                  @Override
                  public void onSuccess(SafetyNetApi.AttestationResponse response) {
                      // Indicates communication with the service was successful.
                      // Use response.getJwsResult() to get the result data.
                  Log.i(TAG, "Success! Result is: " +
                        response.getJwsResult());
                  }
              })
          .addOnFailureListener(this, new OnFailureListener() {
             @Override
             public void onFailure(@NonNull Exception e) {
                // An error occurred while communicating with the service.
                Log.e(TAG, "Error during SafetyNet Attest: ", e);
             }
          });
    }
}
```

This source code will check if the used Android device is verified under Google's SafetyNet. The success or failure of this check is logged to the console. 

Please replace `YOUR_API_KEY` with your actual API key. Also, ensure to include SafetyNet in your project dependencies, and ensure correct Android permission are set in your project manifest file.

Note this only checks if the device is a certified Android device and not tampered. To check whether an Android app is interacting with its unmodified binary is more challenging because APK could be modified after downloaded from Google Play. You may need to include server-side checks for this.
