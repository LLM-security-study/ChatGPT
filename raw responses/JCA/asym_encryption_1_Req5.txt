Here is a simple implementation of a Java program that uses RSA for encryption and decryption with a public and private key pair. 

```java
import javax.crypto.Cipher;
import java.security.*;

public class Main {
    public static void main(String[] args) throws Exception {
        KeyPairGenerator keyPairGen = KeyPairGenerator.getInstance("RSA");
        keyPairGen.initialize(2048);
        KeyPair pair = keyPairGen.generateKeyPair(); 

        String msg = "Hello, World!";
        String encMsg = encryptMessage(msg, pair.getPrivate());
        System.out.println("Encrypted message: " + encMsg);

        String decMsg = decryptMessage(encMsg, pair.getPublic());
        System.out.println("Decrypted message: " + decMsg);
    }
 
    private static String encryptMessage(String msg, PrivateKey key) throws Exception {
        Cipher c = Cipher.getInstance("RSA");
        c.init(Cipher.ENCRYPT_MODE, key);
        byte[] encValue = c.doFinal(msg.getBytes());
        return new String(java.util.Base64.getEncoder().encodeToString(encValue));
    }

    private static String decryptMessage(String msg, PublicKey key) throws Exception {
        Cipher c = Cipher.getInstance("RSA");
        c.init(Cipher.DECRYPT_MODE, key);
        byte[] decordedValue = java.util.Base64.getDecoder().decode(msg);
        byte[] decValue = c.doFinal(decordedValue);
        return new String(decValue);
    }
}
```
This is a simple and minimal example. The `encryptMessage` function encrypts the given string with a private key, and the `decryptMessage` function decrypts the given string with the public key. In the `main` function, we generate a RSA key pair, and use them to encrypt and then decrypt a hardcoded message. The original and decrypted messages should be the same.

Note that you usually use the partner's public key to encrypt the data and your own private key to decrypt the data. However, in this program, we switch them (encrypt with private, decrypt with public) in order to run it within the same program, without sending any data or public keys over the network.
