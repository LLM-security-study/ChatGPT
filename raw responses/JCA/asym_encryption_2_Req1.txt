Sure, here is a simple Java program to implement an asymmetric cryptography algorithm using RSA which is a part of Java Cryptography Architecture.

This program is composed of two parts: KeyPairGenerator method that generates a public key and a private key, and the main method in which encryption and decryption processes occur.

```java
import java.security.KeyPairGenerator;
import java.security.KeyPair;
import java.security.PrivateKey;
import java.security.PublicKey;
import javax.crypto.Cipher;
import java.util.Base64;

public class Main {
    public static void main(String[] args) throws Exception {

        // KeyPair generation
        KeyPairGenerator keyPairGen = KeyPairGenerator.getInstance("RSA");
        KeyPair keyPair = keyPairGen.generateKeyPair(); 
        PublicKey publicKey = keyPair.getPublic();
        PrivateKey privateKey = keyPair.getPrivate();

        // Original message
        String msg = "Hello, World!";
        System.out.println("Original Message: " + msg);

        // Encryption
        Cipher encryptCipher = Cipher.getInstance("RSA");
        encryptCipher.init(Cipher.ENCRYPT_MODE, publicKey);
        byte[] encryptedBytes = encryptCipher.doFinal(msg.getBytes());
        System.out.println("Encrypted Message: " + Base64.getEncoder().encodeToString(encryptedBytes));

        // Decryption
        Cipher decryptCipher = Cipher.getInstance("RSA");
        decryptCipher.init(Cipher.DECRYPT_MODE, privateKey);
        byte[] decryptedBytes = decryptCipher.doFinal(encryptedBytes);
        System.out.println("Decrypted Message: " + new String(decryptedBytes));
    }
}
```

This simple program uses RSA (Rivest–Shamir–Adleman) public key encryption algorithm which is an asymmetric cryptographic algorithm to encrypt and decrypt a message.

As with all encryption tools, you always need to ensure the security of the key because if someone has the key, they can decrypt all encrypted messages. 

Please remember to install the necessary packages before you compile the code.
