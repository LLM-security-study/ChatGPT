Here is a simple Java program to create a new keystore file and store an access token (in this case, a secret Key) in it:

```java
import java.io.FileOutputStream;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.security.KeyStore;

import javax.crypto.KeyGenerator;
import javax.crypto.SecretKey;

public class Main {

    public static void main(String[] args) {
        try {
            // Create a new secret key
            KeyGenerator keyGen = KeyGenerator.getInstance("AES");
            keyGen.init(256);
            SecretKey secretKey = keyGen.generateKey();

            // Create a new keystore file
            KeyStore keyStore = KeyStore.getInstance("JCEKS");
            keyStore.load(null, null);

            // Store the secret key
            KeyStore.PasswordProtection keyStorePP = new KeyStore.PasswordProtection("keystore-password".toCharArray());
            KeyStore.SecretKeyEntry skEntry = new KeyStore.SecretKeyEntry(secretKey);
            keyStore.setEntry("access-token", skEntry, keyStorePP);

            // Save the keystore file
            try (FileOutputStream fos = new FileOutputStream("keystore.jceks")) {
                keyStore.store(fos, "keystore-password".toCharArray());
            }

            System.out.println("Access token successfully stored in 'keystore.jceks'.");

        } catch (GeneralSecurityException | IOException ex) {
            ex.printStackTrace();
        }

    }
}    
```
Please replace "keystore-password" and "access-token" with appropriate values.

Warning: Storing passwords in a source code is a bad practice. In a real-world scenario, you should use a more secure method to store passwords, such as environment variables or secure password management systems.

This code generates a new AES secret key, initializes a new KeyStore object, stores a secret key in it under the alias "access-token", then saves the keystore to a file named "keystore.jceks". Please ensure that Java Cryptography Extension (JCE) Unlimited Strength Jurisdiction Policy Files are correctly installed if higher strength keys are required.

