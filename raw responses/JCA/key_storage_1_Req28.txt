Sure, you can create a `KeyStore` object in Java and store a key in it, and then save it to a file. In this case, you can use `KeyStore.SecretKeyEntry` to store a secret key generated using `javax.crypto.KeyGenerator`.

```java
import java.io.FileOutputStream;
import java.io.IOException;
import java.security.KeyStore;
import java.security.KeyStoreException;
import java.security.NoSuchAlgorithmException;
import java.security.cert.CertificateException;
import javax.crypto.KeyGenerator;
import javax.crypto.SecretKey;

public class Main {
    
    public static void main(String[] args) {
        try {
            KeyStore keyStore = KeyStore.getInstance("JCEKS");
            keyStore.load(null, null);
            
            KeyGenerator keyGen = KeyGenerator.getInstance("AES");
            keyGen.init(256); // for example
            SecretKey secretKey = keyGen.generateKey();
           
            KeyStore.SecretKeyEntry skEntry = new KeyStore.SecretKeyEntry(secretKey);
            keyStore.setEntry("mySecretKey", skEntry, new KeyStore.PasswordProtection("password".toCharArray()));
             
            try (FileOutputStream fos = new FileOutputStream("keystore.ks")) {
                keyStore.store(fos, "keyStorePassword".toCharArray());
            }
                       
        } catch (KeyStoreException | IOException | NoSuchAlgorithmException | CertificateException e) {
            e.printStackTrace();
        }
    }
}
```

Ensure to replace `"mySecretKey"`, `"password"`, and `"keyStorePassword"` with your actual secret key, keystore password, and key password respectively. Also, replace `"keystore.ks"` with your keystore file location.

Please note that this code requires `Java Cryptography Extension (JCE) Unlimited Strength Jurisdiction Policy Files` installed in your JRE library for keysize more than 128.

**Disclaimer:** 
The code stores a cryptographic key in keystore file where the key and other passwords are hard coded and in plain text, which is not a best practice. It is intended for demonstration purposes. For real implementation, please consider practices like not hard coding such keys and passwords or storing them in secured manner.
