Sure, here is a basic example of a Java program that signs and verifies messages using Java's standard APIs:

```java
import java.security.*;
import java.util.Arrays;

public class Main {

    private static PrivateKey privateKey;
    private static PublicKey publicKey;

    public static void main(String[] args) throws Exception{
        
        // Generate public and private keys
        KeyPairGenerator keyGen = KeyPairGenerator.getInstance("DSA","SUN");
        SecureRandom random = SecureRandom.getInstance("SHA1PRNG", "SUN");
        keyGen.initialize(1024, random);

        KeyPair pair = keyGen.generateKeyPair();
        privateKey = pair.getPrivate();
        publicKey = pair.getPublic();

        // Original data
        byte[] originalData = "sample message".getBytes("UTF8");

        // Sign
        byte[] digitalSignature = sign(originalData);

        // Verify
        boolean isValid = verify(originalData, digitalSignature);
        System.out.println("Signature valid: " + isValid);
    }

    public static byte[] sign(byte[] data) throws Exception {
        Signature dsa = Signature.getInstance("SHA256withDSA", "SUN"); 
        dsa.initSign(privateKey);
        dsa.update(data);

        /* Now that all the data to be signed has been read in, 
            generate a signature for it */
        byte[] signature = dsa.sign();

        return signature;
    }

    public static boolean verify(byte[] data, byte[] signature) throws Exception {
        Signature sig = Signature.getInstance("SHA256withDSA", "SUN");
        sig.initVerify(publicKey);
        sig.update(data);

        /* Verify the signature */
        return sig.verify(signature);
    }

}
```

This program uses Digital Signature Algorithm (DSA) for signing and verifying messages. In the main function:
- A key pair (public key and private key) is generated.
- A sample message "sample message" is converted to bytes.
- The `sign()` method is called passing the data bytes which returns a digital signature (also bytes).
- The `verify()` method is then called passing the data bytes and the digital signature. It returns a boolean indicating whether the signature is valid or not.

Please note that it is generally not safe to expose your private key as it is done in this program. The private key should be kept secret and safe at all times. This code only serves for illustrative purposes and doesn't follow secure coding practices.
