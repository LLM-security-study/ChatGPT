To calculate a hash of a string in Java, we use the MessageDigest class in the java.security package. Here's an example:

```java
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Enter a string:");
        String input = scanner.nextLine();

        try {
            MessageDigest md = MessageDigest.getInstance("SHA-256"); // using SHA-256 algorithm

            byte[] hash = md.digest(input.getBytes());

            // Converting byte array to Hexadecimal String
            StringBuilder sb = new StringBuilder();
            for(byte b : hash) {
                sb.append(String.format("%02x", b));
            }

            System.out.println("Hash of the input string is:");
            System.out.println(sb.toString());

        } catch (NoSuchAlgorithmException e) {
            System.out.println("Error occurred while calculating hash:");
            e.printStackTrace();
        }
    }
}
```

In this program, MessageDigest.getInstance("SHA-256") is used to get an instance of MessageDigest object that implements SHA-256 algorithm. The input string is converted to bytes and given to the digest() method of the MessageDigest object, which calculates the hash. We then convert the byte array returned by this method to a hexadecimal string which is the standard way of viewing hashes.
