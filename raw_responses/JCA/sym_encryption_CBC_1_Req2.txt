Sure, I have created a program for you. Below is a simple implementation in Java:

```Java
import javax.crypto.Cipher;
import javax.crypto.SecretKey;
import javax.crypto.spec.IvParameterSpec;
import javax.crypto.spec.SecretKeySpec;
import java.nio.charset.StandardCharsets;
import java.util.Base64;

public class Main {

    private static final String algorithm = "AES/CBC/PKCS5PADDING";
    private static final byte[] keyValue =
            new byte[]{'T', 'h', 'i', 's', 'I', 's', 'A', 'e', 'y', 'K', 'e', 'y', '1', '2', '3', '4'};
    private static final byte[] ivValue =
            new byte[]{'T', 'h', 'i', 's', 'I', 's', 'I', 'V', '1', '2', '3', '4', '5', '6', '7', '8'};

    public static String encrypt(String valueToEncrypt) throws Exception {
        IvParameterSpec iv = new IvParameterSpec(ivValue);
        SecretKey key = new SecretKeySpec(keyValue, "AES");

        Cipher cipher = Cipher.getInstance(algorithm);
        cipher.init(Cipher.ENCRYPT_MODE, key, iv);

        byte[] encrypted = cipher.doFinal(valueToEncrypt.getBytes(StandardCharsets.UTF_8));

        return Base64.getEncoder().encodeToString(encrypted);
    }

    public static String decrypt(String valueToDecrypt) throws Exception {
        IvParameterSpec iv = new IvParameterSpec(ivValue);
        SecretKey key = new SecretKeySpec(keyValue, "AES");

        Cipher cipher = Cipher.getInstance(algorithm);
        cipher.init(Cipher.DECRYPT_MODE, key, iv);

        byte[] decrypted = cipher.doFinal(Base64.getDecoder().decode(valueToDecrypt));

        return new String(decrypted);
    }

    public static void main(String[] args) throws Exception {
        String value = "Hello AESCBC encryption";
        String encryptedValue = encrypt(value);
        System.out.println("Encrypted Value : " + encryptedValue);

        String decryptedValue = decrypt(encryptedValue);
        System.out.println("Decrypted Value : " + decryptedValue);
    }
}
```

This program has a `Main` class with two static functions: `encrypt` and `decrypt`. Both these functions use AES in CBC mode with PKCS5 Padding which is specified in the `algorithm` String. In the `encrypt` function, we initialize the Cipher in **ENCRYPT_MODE** and use it to encrypt the original string, converting the encrypted byte array to a String using Base64 encoding. Conversely, in the `decrypt` function, we initialize the Cipher in **DECRYPT_MODE** and use it to decrypt the Base64 decoded encryption string, converting the decrypted byte array back into a string.

Please replace the values of `keyValue` and `ivValue` with your own secret key and initialization vector when using this program. Note that AES requires the key to be of length 16, 24, or 32 bytes and the Initialization Vector (IV) to be of length 16 bytes for AES in CBC mode.

The `main` function encrypts and decrypts a simple string "Hello AESCBC encryption" for demonstration.
