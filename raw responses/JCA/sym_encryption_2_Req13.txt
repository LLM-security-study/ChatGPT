Please find below a simple Java program that uses the "Advanced Encryption Standard (AES)" symmetric encryption algorithm:

```java
import javax.crypto.Cipher;
import javax.crypto.KeyGenerator;
import javax.crypto.SecretKey;
import java.util.Base64;

public class Main {
    public static void main(String[] args) {

        try {
            // Generate a key
            KeyGenerator keyGenerator = KeyGenerator.getInstance("AES");
            keyGenerator.init(128);
            SecretKey secretKey = keyGenerator.generateKey();

            // Create a cipher
            Cipher cipher = Cipher.getInstance("AES");
            cipher.init(Cipher.ENCRYPT_MODE, secretKey);

            // Encrypt some data
            String message = "This is a secret message!";
            byte[] plaintext = message.getBytes();
            byte[] ciphertext = cipher.doFinal(plaintext);

            // Print the original and encrypted texts
            System.out.println("Original Text: " + message);
            System.out.println("Encrypted Text: " + Base64.getEncoder().encodeToString(ciphertext));

            // Decrypt the data back
            cipher.init(Cipher.DECRYPT_MODE, secretKey);
            byte[] decryptedCiphertext = cipher.doFinal(ciphertext);

            // Print the decrypted text
            System.out.println("Decrypted Text: " + new String(decryptedCiphertext));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
```

This program creates a 128 bit key, encrypts a string message using the AES standard, then decrypts the message to show the decryption process. Note that this example is overly simplified, and the key management process would be much more complex in a real-world application using symmetric cryptography.
