Here is a simple yet effective program that illustrates how asymmetric encryption and decryption works in Java. This program uses Java Security Standard APIs to implement RSA algorithm for encryption. 

```java
import javax.crypto.Cipher;
import java.security.*;

public class Main {

    public static void main(String[] args) throws Exception {
        // The original message
        String originalMessage = "Hello, World!";

        // Generate the RSA key pair
        KeyPair keyPair = generateRSAKeyPair();

        // Get the public and private keys
        PublicKey publicKey = keyPair.getPublic();
        PrivateKey privateKey = keyPair.getPrivate();

        // Encrypt the original message
        byte[] encryptedMessage = encrypt(originalMessage, publicKey);

        // Decrypt the encrypted message
        String decryptedMessage = decrypt(encryptedMessage, privateKey);

        System.out.println("Original Message: " + originalMessage);
        System.out.println("Encrypted Message: " + new String(encryptedMessage));
        System.out.println("Decrypted Message: " + decryptedMessage);
    }

    public static KeyPair generateRSAKeyPair() throws Exception {
        SecureRandom secureRandom = new SecureRandom();
        KeyPairGenerator keyPairGenerator = KeyPairGenerator.getInstance("RSA");
        keyPairGenerator.initialize(2048, secureRandom);
        return keyPairGenerator.generateKeyPair();
    }

    public static byte[] encrypt(String message, PublicKey publicKey) throws Exception {
        Cipher cipher = Cipher.getInstance("RSA");
        cipher.init(Cipher.ENCRYPT_MODE, publicKey);
        return cipher.doFinal(message.getBytes());
    }

    public static String decrypt(byte[] encryptedMessage, PrivateKey privateKey) throws Exception {
        Cipher cipher = Cipher.getInstance("RSA");
        cipher.init(Cipher.DECRYPT_MODE, privateKey);
        return new String(cipher.doFinal(encryptedMessage));
    }
}
```

Kindly replace "Hello, World!" with the text you want to encrypt. 

Please note the `generateRSAKeyPair` method uses RSA algorithm for generating the public and private keys, and uses these keys to encrypt and decrypt messages.

Keep in mind that the strength of the encryption relies upon the key size. In the code above, 2048 bits key size is used which provides strong encryption.
