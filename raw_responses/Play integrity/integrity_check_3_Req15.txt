You can use the SafetyNet Attestation API provided by Google to assess the integrity of the Android device on which your app is running. 

Here is a basic implementation for the mentioned scenario: 

```java

import com.google.android.gms.safetynet.SafetyNet;
import com.google.android.gms.safetynet.SafetyNetApi;
import com.google.android.gms.tasks.OnSuccessListener;

public class Main {

    public static void main(String ... args) {
        // The nonce should be at least 16 bytes in length.
        byte[] nonce = generateNonce(); // implement this according to your needs

        // This represents your project's (client's) API key.
        String myApiKey = getMyApiKey(); // implement this according to your needs

        SafetyNet.getClient(context).attest(nonce, myApiKey)
                .addOnSuccessListener(new OnSuccessListener<SafetyNetApi.AttestationResponse>() {
                    @Override
                    public void onSuccess(SafetyNetApi.AttestationResponse response) {
                        // The SafetyNet Attestation API returned a response successfully
                        String result = response.getJwsResult();
                        // Use the result to assess the device's integrity
                        // Make sure to send this to your server for further verification 
                    }
                });
    }

}

```

Please note:

1. This is a basic usage of the SafetyNet Attestation API. You should implement additional error handling.
2. SafetyNet Attestation API helps to determine whether your app is running on a certified device, in the manner you intended. It cannot attest if the device is running on an emulator, rooted, or compromised in other ways.
3. You should generate the `nonce` securely and randomly to prevent replay attacks.
4. The returned JWS (JSON Web Signature) result should ideally be sent to your own server where you can verify its details, using the API again if necessary.

Finally, make sure to have the necessary permissions and Google Play Services available and up-to-date.
