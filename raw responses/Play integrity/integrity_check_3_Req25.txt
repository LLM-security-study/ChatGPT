There isn't a specific API or library in Android to directly verify the integrity of a device, however Google provides SafetyNet API which can check whether a device has been tampered with or potentially harmful. Here's a simple implementation:

First you need to add the SafetyNet API to your project:

```xml
dependencies {
    implementation 'com.google.android.gms:play-services-safetynet:17.0.0'
}
```

Add the internet permission to your manifest file:

```xml
<manifest ...>
    <uses-permission android:name="android.permission.INTERNET"/>
</manifest>
```

Here is the main class:

```java
import com.google.android.gms.safetynet.SafetyNet;
import com.google.android.gms.safetynet.SafetyNetApi;
import com.google.android.gms.tasks.OnSuccessListener;

public class Main {

    public void checkIntegrity() {
        String nonceData = "A random value to avoid replay attacks";   // Generate a random nonce.
        byte[] nonce = nonceData.getBytes();

        SafetyNet.getClient(this).attest(nonce, API_KEY)
                .addOnSuccessListener(this,
                        new OnSuccessListener<SafetyNetApi.AttestationResponse>() {
                            @Override
                            public void onSuccess(SafetyNetApi.AttestationResponse response) {
                                // Use response.getJwsResult() to get the result data.
                            }
                        })
                .addOnFailureListener(this, new OnFailureListener() {
                    @Override
                    public void onFailure(@NonNull Exception e) {
                        // An error occurred while communicating with the SafetyNet API.
                    }
                });
    }
}
```

This is a basic example and does not handle all cases. In the onSuccess method, you need to send the JWS result to your server, where you can verify it and check the 'ctsProfileMatch' and 'basicIntegrity' fields to check if the device integrity.

Remember to replace the `API_KEY` with the actual API key. Also, usually this code should not be in a Main class as it's an Android application but in an Activity or a Fragment.
