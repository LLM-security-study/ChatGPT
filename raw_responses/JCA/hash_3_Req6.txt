Sure here is a simple solution:

```java
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

public class Main {
    public static void main(String[] args) {
        String message = "Hello World!";
        try {
            MessageDigest md = MessageDigest.getInstance("SHA-256");
            md.update(message.getBytes());
            byte[] digest = md.digest();
            System.out.println("Generated hash: " + bytesToHex(digest));
        } catch (NoSuchAlgorithmException e) {
            System.out.println("Error occurred: " + e.toString());
        }
    }

    public static String bytesToHex(byte[] hash) {
        StringBuffer hexString = new StringBuffer();
        for (byte b : hash) {
            String hex = Integer.toHexString(0xff & b);
            if(hex.length() == 1)
                hexString.append('0');
            hexString.append(hex);
        }
        return hexString.toString();
    }
}
```

In the above code:

1. We are using Java's built-in libraries for MessageDigest and NoSuchAlgorithmException.
2. We initialized our MessageDigest with SHA-256 (You can replace it with any other hashing algorithm as per your requirements - e.g., MD5, SHA-1).
3. We updated our hashing function with the bytes of our message and finally computed the hash.
4. The hash (digest) is actually a byte array. So, we are calling `bytesToHex` to convert it into a more readable format (String).
5. Our `bytesToHex` function converts the bytes into their equivalent hexadecimal values (as String).
6. The final result is printed out.

