Here is a simple Java program that uses the MessageDigest class in Java to create a SHA-256 hash of a given message:

```java
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

public class Main {
    public static void main(String[] args) {
        String originalString = "This is a message";
        System.out.println(hash(originalString));
    }

    public static String hash(String originalString) {
        try {
            MessageDigest digest = MessageDigest.getInstance("SHA-256");
            byte[] encodedhash = digest.digest(originalString.getBytes(StandardCharsets.UTF_8));
            return bytesToHex(encodedhash);
        } catch (NoSuchAlgorithmException e) {
            throw new RuntimeException(e);
        }
    }

    private static String bytesToHex(byte[] hash) {
        StringBuffer hexString = new StringBuffer();
        for (int i = 0; i < hash.length; i++) {
            String hex = Integer.toHexString(0xff & hash[i]);
            if(hex.length() == 1) hexString.append('0');
            hexString.append(hex);
        }
        return hexString.toString();
    }
}
```
This program will output the SHA-256 hash of the string "This is a message". The `hash` method creates the hash, and `bytesToHex` method converts it to a user-readable form.

Please note, in a real-world application, error handling needed to be more comprehensive than just printing stack traces.
