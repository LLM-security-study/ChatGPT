Here's the basic structure for a Java program that uses fingerprint recognition on Android:

```java
import android.hardware.fingerprint.FingerprintManager;
import android.os.CancellationSignal;
import android.widget.Toast;
import android.content.Context;

public class Main {

    private FingerprintManager fingerprintManager;
    private CancellationSignal cancellationSignal;

    public Main(Context context){
        fingerprintManager = context.getSystemService(FingerprintManager.class);
    }

    public void startAuth(){
        cancellationSignal = new CancellationSignal();
        fingerprintManager.authenticate(null, cancellationSignal, 0, new AuthenticationCallback(), null);
    }

    private class AuthenticationCallback extends FingerprintManager.AuthenticationCallback {
        @Override
        public void onAuthenticationError(int errorCode, CharSequence errString) {
            super.onAuthenticationError(errorCode, errString);
            Toast.makeText(getApplication(), "Authentication Error", Toast.LENGTH_SHORT).show();
        }

        @Override
        public void onAuthenticationFailed() {
            super.onAuthenticationFailed();
            Toast.makeText(getApplication(), "Authentication Failed", Toast.LENGTH_SHORT).show();
        }

        @Override
        public void onAuthenticationSucceeded(FingerprintManager.AuthenticationResult result) {
            super.onAuthenticationSucceeded(result);
            Toast.makeText(getApplication(), "Authentication Succeeded", Toast.LENGTH_SHORT).show();              
        }
    }

    public void cancelAuth(){
        cancellationSignal.cancel();
    }
}
```

Important points:

1. This is a basic structure for a program. It might not work if you just copy and paste. You need to integrate it into a real project.
2. Before using `fingerprintManager.authenticate()`, you need to ensure you have the proper USE_FINGERPRINT permission in your AndroidManifest file and checked at runtime.
3. FingerprintManager is now deprecated in API 28, and should be replaced with the BiometricPrompt class for a more general biometric authentication.

You'll need to add this permission to your AndroidManifest.xml:

```xml
<uses-permission android:name="android.permission.USE_FINGERPRINT" />
```

Also check the permission at runtime:

```java
if (ContextCompat.checkSelfPermission(context, Manifest.permission.USE_FINGERPRINT) 
    != PackageManager.PERMISSION_GRANTED) {

    // request the permission
    ActivityCompat.requestPermissions(activity, 
        new String[]{Manifest.permission.USE_FINGERPRINT}, 
        REQUEST_CODE);
}
```
