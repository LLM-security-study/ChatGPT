Sure, below is a Java program that does this:

```java
import java.util.Random;
import java.security.SecureRandom;

public class Main {
    public static void main(String[] args) {
        // Generate a seed
        SecureRandom random = new SecureRandom();
        byte[] seed = random.generateSeed(20);

        // Initialize a new random object with the seed
        Random rand = new Random(new SecureRandom(seed).nextLong());

        // Generate a random integer
        int randInt = rand.nextInt();
        
        // Ensuring the random number is a positive value
        randInt = (randInt < 0) ? -randInt : randInt; 

        // Print the random integer
        System.out.println("Random Integer: " + randInt);
    }
}
```

In the code: 

- SecureRandom is used to generate a seed. SecureRandom is a subclass of Random and provides a cryptographically strong random number generator.
- Random object rand is initialized with this seed.
- A random integer is then generated by calling nextInt on the Random object.
- This integer is then printed on the console.
- The absolute value of the random integer is taken, to ensure the number is positive as negative integers are not commonly used in cryptographic applications.

Please make sure to run this code in a secure and private environment, as it deals with pseudo random numbers which could potentially be used for sensitive operations in cryptographic applications.
