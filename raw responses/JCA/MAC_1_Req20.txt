Here is a simple Java Program that creates Message Authentication Code using the HMAC-SHA256 algorithm.

```java
import javax.crypto.Mac;
import javax.crypto.spec.SecretKeySpec;
import java.nio.charset.StandardCharsets;
import java.util.Base64;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter your message: ");
        String message = scanner.nextLine();

        String secret = "your_secret_key"; // replace "your_secret_key" with your actual secret key

        try {
            Mac sha256Hmac = Mac.getInstance("HmacSHA256");
            SecretKeySpec secretKeySpec = new SecretKeySpec(secret.getBytes(StandardCharsets.UTF_8), "HmacSHA256");
            sha256Hmac.init(secretKeySpec);
            byte[] encodedHash = sha256Hmac.doFinal(message.getBytes(StandardCharsets.UTF_8));
            String hash = Base64.getEncoder().encodeToString(encodedHash);

            System.out.println("The HMAC SHA256 Hash is: " + hash);
        } catch (Exception e) {
            System.out.println("Error generating HMAC SHA256");
        }
    }
}
```

You can run the program and enter a message. It will create a Message Authentication Code (MAC) for the given message using the secret key and HMAC-SHA256 algorithm. The generated MAC will be displayed on the console. Make sure to replace `"your_secret_key"` with your actual secret key.

Please note that exception handling is done generally. For production code, make sure the exceptions are properly handled and the secret key is not hardcoded in the program. It should be kept in a configuration file or securely managed using a secret manager depending on deployment environment.
