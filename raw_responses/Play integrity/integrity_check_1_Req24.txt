To determine if an Android app is interacting with an Android binary unmodified recognized by Google Play, we can use Google Play's SafetyNet Attestation API. This API helps us to assess the security and compatibility of the Android environment in which your app runs.

Keep in mind, a real implementation should have API key hidden/protected and server-side check as well to ensure the integrity. Here is a simple example using the mentioned API. 

```java
import androidx.appcompat.app.AppCompatActivity;
import android.os.Bundle;
import com.google.android.gms.common.api.ApiException;
import com.google.android.gms.safetynet.SafetyNet;
import com.google.android.gms.tasks.OnFailureListener;
import com.google.android.gms.tasks.OnSuccessListener;
import android.util.Log;

public class Main extends AppCompatActivity {

    // Assume there is an available key
    private String API_KEY = "YOUR_API_KEY_HERE";

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        SafetyNet.getClient(this).attest(API_KEY.getBytes(), API_KEY)
                .addOnSuccessListener(this,
                        new OnSuccessListener<SafetyNetApi.AttestationResponse>() {
                            @Override
                            public void onSuccess(SafetyNetApi.AttestationResponse response) {
                                // Indicates communication with the service was successful.
                                // Use response.getJwsResult() to get the result data.
                                Log.d("MyApp", "SafetyNet check success: " + response.getJwsResult());
                            }
                        })
                .addOnFailureListener(this, new OnFailureListener() {
                    @Override
                    public void onFailure(@NonNull Exception e) {
                        // An error has occurred. Check if it's because of a known issue using ApiException.getStatusCode().
                        if (e instanceof ApiException) {
                            ApiException apiException = (ApiException) e;
                            // Handle API errors using apiException.getStatusCode()
                            Log.d("MyApp","Failure: " + apiException.getStatusCode());
                        } else {
                            // Unknown type of error has occurred.
                            Log.d("MyApp","Failure");
                        }
                    }
                });
    }
}
```

Also, add this to your gradle dependencies:
```java
implementation 'com.google.android.gms:play-services-safetynet:17.0.0'
```

This program communicates with Google's servers to verify the authenticity and integrity of an app currently installed on the user's device. If the binary matches the one on Google Play and the environment is secure, the onSuccess method will be called with a SafetyNetApi.AttestationResponse instance providing attestation result. If not, onFailure will be called with an exception detailing the issue.
