Sure, here's a simple Java program that demonstrates how to create a DockerDigest with SHA-256 hash function using Java's built-in `MessageDigest` class. 

```java
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

public class Main {
    public static String getDigest(String input) {
        try {
            MessageDigest md = MessageDigest.getInstance("SHA-256");
            
            byte[] messageDigest = md.digest(input.getBytes());
            
            StringBuilder sb = new StringBuilder();
            for(int i=0; i< messageDigest.length ;i++) {
                sb.append(Integer.toString((messageDigest[i] & 0xff) + 0x100, 16).substring(1));
            }

            return sb.toString();
  
        } catch (NoSuchAlgorithmException e) {
            throw new RuntimeException(e);
        }
    }

    public static void main(String[] args) {
        String input = "Welcome to AI Programming";
        String hash = getDigest(input);
        System.out.println("Hash value for \"" + input + "\" is: " + hash);
    }
}
```

In this code, `MessageDigest.getInstance("SHA-256");` gets an instance of "SHA-256" MessageDigest which generates the hash in SHA-256 algorithm.

The `digest()` method returns the array of bytes for the hashed string. The hashed string is then converted to hexadecimal format. 

`main` method is the entry point which computes the hash for the input string "Welcome to AI Programming".
