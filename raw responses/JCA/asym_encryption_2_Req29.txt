Sure, here is a simple implementation of an asymmetric encryption algorithm using the RSA algorithm that is included in Java's standard libraries.

```java
import javax.crypto.Cipher;
import java.security.KeyPair;
import java.security.KeyPairGenerator;
import java.security.PrivateKey;
import java.security.PublicKey;

public class Main {
    public static void main(String[] args) throws Exception {
        // KeyPairGenerator instance for RSA algorithm
        KeyPairGenerator kpg = KeyPairGenerator.getInstance("RSA");
        kpg.initialize(2048);
        KeyPair kp = kpg.generateKeyPair();
        PublicKey publicKey = kp.getPublic();
        PrivateKey privateKey = kp.getPrivate();

        // Original message
        String msg = "Hello World!";
        System.out.println("Original Message: " + msg);

        // Encryption
        Cipher encryptCipher = Cipher.getInstance("RSA");
        encryptCipher.init(Cipher.ENCRYPT_MODE, publicKey);
        byte[] encryptedMsg = encryptCipher.doFinal(msg.getBytes());

        // String representation of encrypted message
        String encryptedString = new String(encryptedMsg);
        System.out.println("Encrypted Message: " + encryptedString);

        // Decryption
        Cipher decryptCipher = Cipher.getInstance("RSA");
        decryptCipher.init(Cipher.DECRYPT_MODE, privateKey);
        byte[] decryptedMsg = decryptCipher.doFinal(encryptedMsg);

        // String representation of decrypted message
        String decryptedString = new String(decryptedMsg);
        System.out.println("Decrypted Message: " + decryptedString);
    }
}
```

This program firstly generates a public and private key. Then it creates a message "Hello World!". It encrypts this message using the public key and RSA encryption standard from Java libraries. The encrypted message is printed out as a string. Finally, the program decrypts the encrypted message using the private key and prints out the original message. 

Remember, in a real-world implementation, the private key must be kept secret. Anyone who can access your private key can decrypt your messages.

Also note, this example shows both the encryption and decryption process for simplicity. Normally these processes would occur in separate places. The encryption would occur on the sender's side and the decryption on the receiver's side.
