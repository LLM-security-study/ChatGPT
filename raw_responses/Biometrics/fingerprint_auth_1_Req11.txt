Creating a Java program for fingerprint authentication for an Android app, involves making use of the FingerprintManager or Biometric Prompt (based on the Android version). Here, I'm providing an example using BiometricPrompt for devices running Android 9.0 (Pie) and higher.

However, keep in mind that to test and actually use this code, you will need an actual device with a fingerprint sensor. This code cannot be fully tested in an emulator. 

```java
import android.os.Bundle;
import android.widget.Toast;
import androidx.appcompat.app.AppCompatActivity;
import androidx.biometric.BiometricManager;
import androidx.biometric.BiometricPrompt;
import androidx.core.content.ContextCompat;
import java.util.concurrent.Executor;

public class Main extends AppCompatActivity {
    private BiometricPrompt biometricPrompt;
    private BiometricPrompt.PromptInfo promptInfo;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        Executor executor = ContextCompat.getMainExecutor(this);
        BiometricManager biometricManager = BiometricManager.from(this);
        
        biometricPrompt = new BiometricPrompt(Main.this,
                executor, new BiometricPrompt.AuthenticationCallback() {
            @Override
            public void onAuthenticationError(int errorCode,
                                              CharSequence errString) {
                super.onAuthenticationError(errorCode, errString);
                Toast.makeText(getApplicationContext(),
                        "Authentication error: " + errString, Toast.LENGTH_SHORT)
                        .show();
            }

            @Override
            public void onAuthenticationSucceeded(
                    BiometricPrompt.AuthenticationResult result) {
                super.onAuthenticationSucceeded(result);
                Toast.makeText(getApplicationContext(),
                        "Authentication succeeded!", Toast.LENGTH_SHORT).show();
            }

            @Override
            public void onAuthenticationFailed() {
                super.onAuthenticationFailed();
                Toast.makeText(getApplicationContext(), "Authentication failed",
                        Toast.LENGTH_SHORT)
                        .show();
            }
        });

        promptInfo = new BiometricPrompt.PromptInfo.Builder()
                .setTitle("Biometric login for my app")
                .setSubtitle("Log in using your fingerprint")
                .setNegativeButtonText("User app password to authenticate")
                .build();

        // Prompt appears when user clicks “Log in”.
        // Consider integrating with the keystore to securely manage user data.
        biometricPrompt.authenticate(promptInfo);
    }
}
```

This code will display a biometric authentication dialog where the user can scan his/her fingerprint. If the authentication succeeds, it will display a 'Authentication succeeded!' toast message. If the authentication fails, it will display a 'Authentication failed' toast message. 

Please modify it according to your specific requirement. You may also want to handle cases where a device does not have a fingerprint sensor or the user has not enrolled any fingerprints. Also, remember to add necessary permissions and conditions in your Manifest.
