Sure, I can provide you an example of a basic Java program for message digestion using the SHA-256 hash function:

Here's how to do it:

```java
import java.security.MessageDigest;
import java.nio.charset.StandardCharsets;
import javax.xml.bind.DatatypeConverter;

public class Main {
    public static void main(String[] args) {
        String message = "This is the string to be hashed.";
        try {
            // Get instance of the SHA-256 Message Digest
            MessageDigest md = MessageDigest.getInstance("SHA-256");

            // Perform the hashing
            byte[] hashedMessage = md.digest(message.getBytes(StandardCharsets.UTF_8));

            // Convert hashed message from bytes to hexadecimal
            String hashedMessageHex = DatatypeConverter.printHexBinary(hashedMessage);

            System.out.println("Original Message: " + message);
            System.out.println("Hashed Message: " + hashedMessageHex);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
```
In the code snippet above, we first get an instance of the SHA-256 Message Digest and use it to hash the string message. The output (i.e., the hashed message) is a byte array which we then convert into a hexadecimal string for printing. Any exceptions encountered during the process are caught and printed out.

This program doesn't require any user input. If you need the user to input the string, you can easily modify the code to allow for that. Please note that the javax.xml.bind.DatatypeConverter class is available in Java 8 or less. If you are using Java 9 or higher version, you need to convert byte array to hex using different class as DatatypeConverter  is removed in those versions.
