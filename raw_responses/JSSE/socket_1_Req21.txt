Ok, let's use the Java Secure Socket Extension (JSSE) API to implement the SSL Socket for secure communication. You should have a valid keystore file in a mentioned directory to run the program.

Here is a simple implementation of SSL socket in Java:

```java
import javax.net.ssl.SSLSocket;
import javax.net.ssl.SSLSocketFactory;
import java.io.*;

public class Main {
    public static void main(String[] arstring) {
        try {
            System.setProperty("javax.net.ssl.trustStore", "mySrvKeystore");
            System.setProperty("javax.net.ssl.trustStorePassword", "password");

            SSLSocketFactory sslsocketfactory = (SSLSocketFactory) SSLSocketFactory.getDefault();
            SSLSocket sslsocket = (SSLSocket) sslsocketfactory.createSocket("192.168.0.155", 9999);

            PrintWriter output = new PrintWriter(new OutputStreamWriter(sslsocket.getOutputStream()));
            String message = "Hello Secure World!";
            output.println(message);
            output.flush();

            InputStreamReader inputstreamreader = new InputStreamReader(sslsocket.getInputStream());
            BufferedReader bufferedreader = new BufferedReader(inputstreamreader);

            String string = null;
            while ((string = bufferedreader.readLine()) != null) {
                System.out.println(string);
                System.out.flush();
            }
        } catch (Exception exception) {
            exception.printStackTrace();
        }
    }
}
```

In the above code, we are setting up system properties with the location of the keystore file and password. Then we are creating an instance of SSLSocketFactory and SSLSocket. We are opening an input and output stream for that SSL socket and then sending a message to the server. 

Note: Replace "mySrvKeystore","password", ip-address in the socket creation "192.168.0.155", and port number as per your requirements. Also, make sure your server is set up and ready to communicate using SSL Sockets. And making sure the server has a valid certificate that could be trusted by this client or these certificates belong to the same certificate chain.
