Sure, here is a simple JAVA program that fulfills your request:

```java
import java.security.SecureRandom;

public class Main {

    public static void main(String[] args) {
        SecureRandom secureRandomGenerator = new SecureRandom();
        
        // Create seed generator
        byte[] randomBytes = new byte[64];
        secureRandomGenerator.nextBytes(randomBytes);
       
        // Get the seed 
        SecureRandom secureRandomSeed = new SecureRandom(randomBytes);
        
        // Generate a random integer
        int randomInt = secureRandomSeed.nextInt();
        
        System.out.println("Random integer: " + randomInt);
    }
}
```

What this program does:

1) Initializes a SecureRandom instance which provides a cryptographically strong random number generator. 

2) Generates a seed with an array of randomly generated bytes.

3) This random seed is then used to initialize a new SecureRandom instance.

4) This new SecureRandom instance is then used to generate a random integer. It's worth mentioning that this integer is suitable for use in cryptographic applications.
